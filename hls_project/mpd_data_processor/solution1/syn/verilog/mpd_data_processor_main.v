// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mpd_data_processor_main_mpd_data_processor_main,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcku035-ffva1156-1-i,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=10.668393,HLS_SYN_LAT=114,HLS_SYN_TPT=64,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3313,HLS_SYN_LUT=4805,HLS_VERSION=2023_1}" *)

module mpd_data_processor_main (
        s_evIn_dout,
        s_evIn_empty_n,
        s_evIn_read,
        s_evOut_din,
        s_evOut_full_n,
        s_evOut_write,
        build_all_samples,
        build_debug_headers,
        enable_cm,
        fiber,
        m_offset_address0,
        m_offset_ce0,
        m_offset_d0,
        m_offset_q0,
        m_offset_we0,
        m_offset_address1,
        m_offset_ce1,
        m_offset_d1,
        m_offset_q1,
        m_offset_we1,
        m_apvThr_address0,
        m_apvThr_ce0,
        m_apvThr_d0,
        m_apvThr_q0,
        m_apvThr_we0,
        m_apvThr_address1,
        m_apvThr_ce1,
        m_apvThr_d1,
        m_apvThr_q1,
        m_apvThr_we1,
        m_apvThrB_address0,
        m_apvThrB_ce0,
        m_apvThrB_d0,
        m_apvThrB_q0,
        m_apvThrB_we0,
        m_apvThrB_address1,
        m_apvThrB_ce1,
        m_apvThrB_d1,
        m_apvThrB_q1,
        m_apvThrB_we1,
        ap_clk,
        ap_rst
);


input  [32:0] s_evIn_dout;
input   s_evIn_empty_n;
output   s_evIn_read;
output  [32:0] s_evOut_din;
input   s_evOut_full_n;
output   s_evOut_write;
input  [0:0] build_all_samples;
input  [0:0] build_debug_headers;
input  [0:0] enable_cm;
input  [4:0] fiber;
output  [9:0] m_offset_address0;
output   m_offset_ce0;
output  [25:0] m_offset_d0;
input  [25:0] m_offset_q0;
output   m_offset_we0;
output  [9:0] m_offset_address1;
output   m_offset_ce1;
output  [25:0] m_offset_d1;
input  [25:0] m_offset_q1;
output   m_offset_we1;
output  [10:0] m_apvThr_address0;
output   m_apvThr_ce0;
output  [12:0] m_apvThr_d0;
input  [12:0] m_apvThr_q0;
output   m_apvThr_we0;
output  [10:0] m_apvThr_address1;
output   m_apvThr_ce1;
output  [12:0] m_apvThr_d1;
input  [12:0] m_apvThr_q1;
output   m_apvThr_we1;
output  [10:0] m_apvThrB_address0;
output   m_apvThrB_ce0;
output  [12:0] m_apvThrB_d0;
input  [12:0] m_apvThrB_q0;
output   m_apvThrB_we0;
output  [10:0] m_apvThrB_address1;
output   m_apvThrB_ce1;
output  [12:0] m_apvThrB_d1;
input  [12:0] m_apvThrB_q1;
output   m_apvThrB_we1;
input   ap_clk;
input   ap_rst;

wire    frame_decoder_U0_ap_start;
wire    frame_decoder_U0_ap_done;
wire    frame_decoder_U0_ap_continue;
wire    frame_decoder_U0_ap_idle;
wire    frame_decoder_U0_ap_ready;
wire    frame_decoder_U0_s_evIn_read;
wire   [12:0] frame_decoder_U0_s_avgASamples_din;
wire    frame_decoder_U0_s_avgASamples_write;
wire   [63:0] frame_decoder_U0_s_avgAPreHeader_din;
wire    frame_decoder_U0_s_avgAPreHeader_write;
wire    frame_decoder_U0_start_out;
wire    frame_decoder_U0_start_write;
wire   [9:0] frame_decoder_U0_m_offset_address0;
wire    frame_decoder_U0_m_offset_ce0;
wire    avgHeaderDiv_U0_ap_start;
wire    avgHeaderDiv_U0_ap_done;
wire    avgHeaderDiv_U0_ap_continue;
wire    avgHeaderDiv_U0_ap_idle;
wire    avgHeaderDiv_U0_ap_ready;
wire    avgHeaderDiv_U0_s_avgAPreHeader_read;
wire    avgHeaderDiv_U0_s_avgBPreHeader_read;
wire   [31:0] avgHeaderDiv_U0_s_avgAHeader_din;
wire    avgHeaderDiv_U0_s_avgAHeader_write;
wire   [31:0] avgHeaderDiv_U0_s_avgBHeader_din;
wire    avgHeaderDiv_U0_s_avgBHeader_write;
wire    avgB_U0_ap_start;
wire    avgB_U0_ap_done;
wire    avgB_U0_ap_continue;
wire    avgB_U0_ap_idle;
wire    avgB_U0_ap_ready;
wire    avgB_U0_s_avgASamples_read;
wire   [12:0] avgB_U0_s_avgBSamplesOut_din;
wire    avgB_U0_s_avgBSamplesOut_write;
wire    avgB_U0_s_avgAHeader_read;
wire   [63:0] avgB_U0_s_avgBPreHeader_din;
wire    avgB_U0_s_avgBPreHeader_write;
wire    avgB_U0_start_out;
wire    avgB_U0_start_write;
wire   [10:0] avgB_U0_m_apvThrB_address0;
wire    avgB_U0_m_apvThrB_ce0;
wire    avgBSamplesFifoProc_U0_ap_start;
wire    avgBSamplesFifoProc_U0_ap_done;
wire    avgBSamplesFifoProc_U0_ap_continue;
wire    avgBSamplesFifoProc_U0_ap_idle;
wire    avgBSamplesFifoProc_U0_ap_ready;
wire    avgBSamplesFifoProc_U0_s_avgBSamplesOut_read;
wire   [31:0] avgBSamplesFifoProc_U0_s_avgBSamplesIn_din;
wire    avgBSamplesFifoProc_U0_s_avgBSamplesIn_write;
wire    event_writer_U0_ap_start;
wire    event_writer_U0_ap_done;
wire    event_writer_U0_ap_continue;
wire    event_writer_U0_ap_idle;
wire    event_writer_U0_ap_ready;
wire   [32:0] event_writer_U0_s_evOut_din;
wire    event_writer_U0_s_evOut_write;
wire    event_writer_U0_s_avgBSamplesIn_read;
wire    event_writer_U0_s_avgBHeader_read;
wire   [10:0] event_writer_U0_m_apvThr_address0;
wire    event_writer_U0_m_apvThr_ce0;
wire    s_avgAPreHeader_full_n;
wire   [63:0] s_avgAPreHeader_dout;
wire   [1:0] s_avgAPreHeader_num_data_valid;
wire   [1:0] s_avgAPreHeader_fifo_cap;
wire    s_avgAPreHeader_empty_n;
wire    s_avgASamples_full_n;
wire   [12:0] s_avgASamples_dout;
wire   [2:0] s_avgASamples_num_data_valid;
wire   [2:0] s_avgASamples_fifo_cap;
wire    s_avgASamples_empty_n;
wire    s_avgBPreHeader_full_n;
wire   [63:0] s_avgBPreHeader_dout;
wire   [1:0] s_avgBPreHeader_num_data_valid;
wire   [1:0] s_avgBPreHeader_fifo_cap;
wire    s_avgBPreHeader_empty_n;
wire    s_avgAHeader_full_n;
wire   [31:0] s_avgAHeader_dout;
wire   [1:0] s_avgAHeader_num_data_valid;
wire   [1:0] s_avgAHeader_fifo_cap;
wire    s_avgAHeader_empty_n;
wire    s_avgBHeader_full_n;
wire   [31:0] s_avgBHeader_dout;
wire   [2:0] s_avgBHeader_num_data_valid;
wire   [2:0] s_avgBHeader_fifo_cap;
wire    s_avgBHeader_empty_n;
wire    s_avgBSamplesOut_full_n;
wire   [12:0] s_avgBSamplesOut_dout;
wire   [1:0] s_avgBSamplesOut_num_data_valid;
wire   [1:0] s_avgBSamplesOut_fifo_cap;
wire    s_avgBSamplesOut_empty_n;
wire    s_avgBSamplesIn_full_n;
wire   [31:0] s_avgBSamplesIn_dout;
wire   [1:0] s_avgBSamplesIn_num_data_valid;
wire   [1:0] s_avgBSamplesIn_fifo_cap;
wire    s_avgBSamplesIn_empty_n;
wire   [0:0] start_for_avgHeaderDiv_U0_din;
wire    start_for_avgHeaderDiv_U0_full_n;
wire   [0:0] start_for_avgHeaderDiv_U0_dout;
wire    start_for_avgHeaderDiv_U0_empty_n;
wire   [0:0] start_for_avgBSamplesFifoProc_U0_din;
wire    start_for_avgBSamplesFifoProc_U0_full_n;
wire   [0:0] start_for_avgBSamplesFifoProc_U0_dout;
wire    start_for_avgBSamplesFifoProc_U0_empty_n;

mpd_data_processor_main_frame_decoder frame_decoder_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(frame_decoder_U0_ap_start),
    .start_full_n(start_for_avgHeaderDiv_U0_full_n),
    .ap_done(frame_decoder_U0_ap_done),
    .ap_continue(frame_decoder_U0_ap_continue),
    .ap_idle(frame_decoder_U0_ap_idle),
    .ap_ready(frame_decoder_U0_ap_ready),
    .s_evIn_dout(s_evIn_dout),
    .s_evIn_empty_n(s_evIn_empty_n),
    .s_evIn_read(frame_decoder_U0_s_evIn_read),
    .s_avgASamples_din(frame_decoder_U0_s_avgASamples_din),
    .s_avgASamples_num_data_valid(s_avgASamples_num_data_valid),
    .s_avgASamples_fifo_cap(s_avgASamples_fifo_cap),
    .s_avgASamples_full_n(s_avgASamples_full_n),
    .s_avgASamples_write(frame_decoder_U0_s_avgASamples_write),
    .s_avgAPreHeader_din(frame_decoder_U0_s_avgAPreHeader_din),
    .s_avgAPreHeader_num_data_valid(s_avgAPreHeader_num_data_valid),
    .s_avgAPreHeader_fifo_cap(s_avgAPreHeader_fifo_cap),
    .s_avgAPreHeader_full_n(s_avgAPreHeader_full_n),
    .s_avgAPreHeader_write(frame_decoder_U0_s_avgAPreHeader_write),
    .start_out(frame_decoder_U0_start_out),
    .start_write(frame_decoder_U0_start_write),
    .m_offset_address0(frame_decoder_U0_m_offset_address0),
    .m_offset_ce0(frame_decoder_U0_m_offset_ce0),
    .m_offset_q0(m_offset_q0)
);

mpd_data_processor_main_avgHeaderDiv avgHeaderDiv_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(avgHeaderDiv_U0_ap_start),
    .ap_done(avgHeaderDiv_U0_ap_done),
    .ap_continue(avgHeaderDiv_U0_ap_continue),
    .ap_idle(avgHeaderDiv_U0_ap_idle),
    .ap_ready(avgHeaderDiv_U0_ap_ready),
    .s_avgAPreHeader_dout(s_avgAPreHeader_dout),
    .s_avgAPreHeader_num_data_valid(s_avgAPreHeader_num_data_valid),
    .s_avgAPreHeader_fifo_cap(s_avgAPreHeader_fifo_cap),
    .s_avgAPreHeader_empty_n(s_avgAPreHeader_empty_n),
    .s_avgAPreHeader_read(avgHeaderDiv_U0_s_avgAPreHeader_read),
    .s_avgBPreHeader_dout(s_avgBPreHeader_dout),
    .s_avgBPreHeader_num_data_valid(s_avgBPreHeader_num_data_valid),
    .s_avgBPreHeader_fifo_cap(s_avgBPreHeader_fifo_cap),
    .s_avgBPreHeader_empty_n(s_avgBPreHeader_empty_n),
    .s_avgBPreHeader_read(avgHeaderDiv_U0_s_avgBPreHeader_read),
    .s_avgAHeader_din(avgHeaderDiv_U0_s_avgAHeader_din),
    .s_avgAHeader_num_data_valid(s_avgAHeader_num_data_valid),
    .s_avgAHeader_fifo_cap(s_avgAHeader_fifo_cap),
    .s_avgAHeader_full_n(s_avgAHeader_full_n),
    .s_avgAHeader_write(avgHeaderDiv_U0_s_avgAHeader_write),
    .s_avgBHeader_din(avgHeaderDiv_U0_s_avgBHeader_din),
    .s_avgBHeader_num_data_valid(s_avgBHeader_num_data_valid),
    .s_avgBHeader_fifo_cap(s_avgBHeader_fifo_cap),
    .s_avgBHeader_full_n(s_avgBHeader_full_n),
    .s_avgBHeader_write(avgHeaderDiv_U0_s_avgBHeader_write)
);

mpd_data_processor_main_avgB avgB_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(avgB_U0_ap_start),
    .start_full_n(start_for_avgBSamplesFifoProc_U0_full_n),
    .ap_done(avgB_U0_ap_done),
    .ap_continue(avgB_U0_ap_continue),
    .ap_idle(avgB_U0_ap_idle),
    .ap_ready(avgB_U0_ap_ready),
    .s_avgASamples_dout(s_avgASamples_dout),
    .s_avgASamples_num_data_valid(s_avgASamples_num_data_valid),
    .s_avgASamples_fifo_cap(s_avgASamples_fifo_cap),
    .s_avgASamples_empty_n(s_avgASamples_empty_n),
    .s_avgASamples_read(avgB_U0_s_avgASamples_read),
    .s_avgBSamplesOut_din(avgB_U0_s_avgBSamplesOut_din),
    .s_avgBSamplesOut_num_data_valid(s_avgBSamplesOut_num_data_valid),
    .s_avgBSamplesOut_fifo_cap(s_avgBSamplesOut_fifo_cap),
    .s_avgBSamplesOut_full_n(s_avgBSamplesOut_full_n),
    .s_avgBSamplesOut_write(avgB_U0_s_avgBSamplesOut_write),
    .s_avgAHeader_dout(s_avgAHeader_dout),
    .s_avgAHeader_num_data_valid(s_avgAHeader_num_data_valid),
    .s_avgAHeader_fifo_cap(s_avgAHeader_fifo_cap),
    .s_avgAHeader_empty_n(s_avgAHeader_empty_n),
    .s_avgAHeader_read(avgB_U0_s_avgAHeader_read),
    .s_avgBPreHeader_din(avgB_U0_s_avgBPreHeader_din),
    .s_avgBPreHeader_num_data_valid(s_avgBPreHeader_num_data_valid),
    .s_avgBPreHeader_fifo_cap(s_avgBPreHeader_fifo_cap),
    .s_avgBPreHeader_full_n(s_avgBPreHeader_full_n),
    .s_avgBPreHeader_write(avgB_U0_s_avgBPreHeader_write),
    .start_out(avgB_U0_start_out),
    .start_write(avgB_U0_start_write),
    .m_apvThrB_address0(avgB_U0_m_apvThrB_address0),
    .m_apvThrB_ce0(avgB_U0_m_apvThrB_ce0),
    .m_apvThrB_q0(m_apvThrB_q0)
);

mpd_data_processor_main_avgBSamplesFifoProc avgBSamplesFifoProc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(avgBSamplesFifoProc_U0_ap_start),
    .ap_done(avgBSamplesFifoProc_U0_ap_done),
    .ap_continue(avgBSamplesFifoProc_U0_ap_continue),
    .ap_idle(avgBSamplesFifoProc_U0_ap_idle),
    .ap_ready(avgBSamplesFifoProc_U0_ap_ready),
    .s_avgBSamplesOut_dout(s_avgBSamplesOut_dout),
    .s_avgBSamplesOut_num_data_valid(s_avgBSamplesOut_num_data_valid),
    .s_avgBSamplesOut_fifo_cap(s_avgBSamplesOut_fifo_cap),
    .s_avgBSamplesOut_empty_n(s_avgBSamplesOut_empty_n),
    .s_avgBSamplesOut_read(avgBSamplesFifoProc_U0_s_avgBSamplesOut_read),
    .s_avgBSamplesIn_din(avgBSamplesFifoProc_U0_s_avgBSamplesIn_din),
    .s_avgBSamplesIn_num_data_valid(s_avgBSamplesIn_num_data_valid),
    .s_avgBSamplesIn_fifo_cap(s_avgBSamplesIn_fifo_cap),
    .s_avgBSamplesIn_full_n(s_avgBSamplesIn_full_n),
    .s_avgBSamplesIn_write(avgBSamplesFifoProc_U0_s_avgBSamplesIn_write)
);

mpd_data_processor_main_event_writer event_writer_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(event_writer_U0_ap_start),
    .ap_done(event_writer_U0_ap_done),
    .ap_continue(event_writer_U0_ap_continue),
    .ap_idle(event_writer_U0_ap_idle),
    .ap_ready(event_writer_U0_ap_ready),
    .s_evOut_din(event_writer_U0_s_evOut_din),
    .s_evOut_full_n(s_evOut_full_n),
    .s_evOut_write(event_writer_U0_s_evOut_write),
    .s_avgBSamplesIn_dout(s_avgBSamplesIn_dout),
    .s_avgBSamplesIn_num_data_valid(s_avgBSamplesIn_num_data_valid),
    .s_avgBSamplesIn_fifo_cap(s_avgBSamplesIn_fifo_cap),
    .s_avgBSamplesIn_empty_n(s_avgBSamplesIn_empty_n),
    .s_avgBSamplesIn_read(event_writer_U0_s_avgBSamplesIn_read),
    .s_avgBHeader_dout(s_avgBHeader_dout),
    .s_avgBHeader_num_data_valid(s_avgBHeader_num_data_valid),
    .s_avgBHeader_fifo_cap(s_avgBHeader_fifo_cap),
    .s_avgBHeader_empty_n(s_avgBHeader_empty_n),
    .s_avgBHeader_read(event_writer_U0_s_avgBHeader_read),
    .build_all_samples(build_all_samples),
    .enable_cm(enable_cm),
    .fiber(fiber),
    .m_apvThr_address0(event_writer_U0_m_apvThr_address0),
    .m_apvThr_ce0(event_writer_U0_m_apvThr_ce0),
    .m_apvThr_q0(m_apvThr_q0)
);

mpd_data_processor_main_fifo_w64_d2_S s_avgAPreHeader_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(frame_decoder_U0_s_avgAPreHeader_din),
    .if_full_n(s_avgAPreHeader_full_n),
    .if_write(frame_decoder_U0_s_avgAPreHeader_write),
    .if_dout(s_avgAPreHeader_dout),
    .if_num_data_valid(s_avgAPreHeader_num_data_valid),
    .if_fifo_cap(s_avgAPreHeader_fifo_cap),
    .if_empty_n(s_avgAPreHeader_empty_n),
    .if_read(avgHeaderDiv_U0_s_avgAPreHeader_read)
);

mpd_data_processor_main_fifo_w13_d3_S s_avgASamples_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(frame_decoder_U0_s_avgASamples_din),
    .if_full_n(s_avgASamples_full_n),
    .if_write(frame_decoder_U0_s_avgASamples_write),
    .if_dout(s_avgASamples_dout),
    .if_num_data_valid(s_avgASamples_num_data_valid),
    .if_fifo_cap(s_avgASamples_fifo_cap),
    .if_empty_n(s_avgASamples_empty_n),
    .if_read(avgB_U0_s_avgASamples_read)
);

mpd_data_processor_main_fifo_w64_d2_S s_avgBPreHeader_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(avgB_U0_s_avgBPreHeader_din),
    .if_full_n(s_avgBPreHeader_full_n),
    .if_write(avgB_U0_s_avgBPreHeader_write),
    .if_dout(s_avgBPreHeader_dout),
    .if_num_data_valid(s_avgBPreHeader_num_data_valid),
    .if_fifo_cap(s_avgBPreHeader_fifo_cap),
    .if_empty_n(s_avgBPreHeader_empty_n),
    .if_read(avgHeaderDiv_U0_s_avgBPreHeader_read)
);

mpd_data_processor_main_fifo_w32_d2_S s_avgAHeader_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(avgHeaderDiv_U0_s_avgAHeader_din),
    .if_full_n(s_avgAHeader_full_n),
    .if_write(avgHeaderDiv_U0_s_avgAHeader_write),
    .if_dout(s_avgAHeader_dout),
    .if_num_data_valid(s_avgAHeader_num_data_valid),
    .if_fifo_cap(s_avgAHeader_fifo_cap),
    .if_empty_n(s_avgAHeader_empty_n),
    .if_read(avgB_U0_s_avgAHeader_read)
);

mpd_data_processor_main_fifo_w32_d4_S s_avgBHeader_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(avgHeaderDiv_U0_s_avgBHeader_din),
    .if_full_n(s_avgBHeader_full_n),
    .if_write(avgHeaderDiv_U0_s_avgBHeader_write),
    .if_dout(s_avgBHeader_dout),
    .if_num_data_valid(s_avgBHeader_num_data_valid),
    .if_fifo_cap(s_avgBHeader_fifo_cap),
    .if_empty_n(s_avgBHeader_empty_n),
    .if_read(event_writer_U0_s_avgBHeader_read)
);

mpd_data_processor_main_fifo_w13_d2_S_x s_avgBSamplesOut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(avgB_U0_s_avgBSamplesOut_din),
    .if_full_n(s_avgBSamplesOut_full_n),
    .if_write(avgB_U0_s_avgBSamplesOut_write),
    .if_dout(s_avgBSamplesOut_dout),
    .if_num_data_valid(s_avgBSamplesOut_num_data_valid),
    .if_fifo_cap(s_avgBSamplesOut_fifo_cap),
    .if_empty_n(s_avgBSamplesOut_empty_n),
    .if_read(avgBSamplesFifoProc_U0_s_avgBSamplesOut_read)
);

mpd_data_processor_main_fifo_w32_d2_S s_avgBSamplesIn_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(avgBSamplesFifoProc_U0_s_avgBSamplesIn_din),
    .if_full_n(s_avgBSamplesIn_full_n),
    .if_write(avgBSamplesFifoProc_U0_s_avgBSamplesIn_write),
    .if_dout(s_avgBSamplesIn_dout),
    .if_num_data_valid(s_avgBSamplesIn_num_data_valid),
    .if_fifo_cap(s_avgBSamplesIn_fifo_cap),
    .if_empty_n(s_avgBSamplesIn_empty_n),
    .if_read(event_writer_U0_s_avgBSamplesIn_read)
);

mpd_data_processor_main_start_for_avgHeaderDiv_U0 start_for_avgHeaderDiv_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_avgHeaderDiv_U0_din),
    .if_full_n(start_for_avgHeaderDiv_U0_full_n),
    .if_write(frame_decoder_U0_start_write),
    .if_dout(start_for_avgHeaderDiv_U0_dout),
    .if_empty_n(start_for_avgHeaderDiv_U0_empty_n),
    .if_read(avgHeaderDiv_U0_ap_ready)
);

mpd_data_processor_main_start_for_avgBSamplesFifoProc_U0 start_for_avgBSamplesFifoProc_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_avgBSamplesFifoProc_U0_din),
    .if_full_n(start_for_avgBSamplesFifoProc_U0_full_n),
    .if_write(avgB_U0_start_write),
    .if_dout(start_for_avgBSamplesFifoProc_U0_dout),
    .if_empty_n(start_for_avgBSamplesFifoProc_U0_empty_n),
    .if_read(avgBSamplesFifoProc_U0_ap_ready)
);

assign avgBSamplesFifoProc_U0_ap_continue = 1'b1;

assign avgBSamplesFifoProc_U0_ap_start = start_for_avgBSamplesFifoProc_U0_empty_n;

assign avgB_U0_ap_continue = 1'b1;

assign avgB_U0_ap_start = 1'b1;

assign avgHeaderDiv_U0_ap_continue = 1'b1;

assign avgHeaderDiv_U0_ap_start = start_for_avgHeaderDiv_U0_empty_n;

assign event_writer_U0_ap_continue = 1'b1;

assign event_writer_U0_ap_start = 1'b1;

assign frame_decoder_U0_ap_continue = 1'b1;

assign frame_decoder_U0_ap_start = 1'b1;

assign m_apvThrB_address0 = avgB_U0_m_apvThrB_address0;

assign m_apvThrB_address1 = 11'd0;

assign m_apvThrB_ce0 = avgB_U0_m_apvThrB_ce0;

assign m_apvThrB_ce1 = 1'b0;

assign m_apvThrB_d0 = 13'd0;

assign m_apvThrB_d1 = 13'd0;

assign m_apvThrB_we0 = 1'b0;

assign m_apvThrB_we1 = 1'b0;

assign m_apvThr_address0 = event_writer_U0_m_apvThr_address0;

assign m_apvThr_address1 = 11'd0;

assign m_apvThr_ce0 = event_writer_U0_m_apvThr_ce0;

assign m_apvThr_ce1 = 1'b0;

assign m_apvThr_d0 = 13'd0;

assign m_apvThr_d1 = 13'd0;

assign m_apvThr_we0 = 1'b0;

assign m_apvThr_we1 = 1'b0;

assign m_offset_address0 = frame_decoder_U0_m_offset_address0;

assign m_offset_address1 = 10'd0;

assign m_offset_ce0 = frame_decoder_U0_m_offset_ce0;

assign m_offset_ce1 = 1'b0;

assign m_offset_d0 = 26'd0;

assign m_offset_d1 = 26'd0;

assign m_offset_we0 = 1'b0;

assign m_offset_we1 = 1'b0;

assign s_evIn_read = frame_decoder_U0_s_evIn_read;

assign s_evOut_din = event_writer_U0_s_evOut_din;

assign s_evOut_write = event_writer_U0_s_evOut_write;

assign start_for_avgBSamplesFifoProc_U0_din = 1'b1;

assign start_for_avgHeaderDiv_U0_din = 1'b1;

endmodule //mpd_data_processor_main
